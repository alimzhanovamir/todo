{"version":3,"sources":["pages/styles.js","ui/atoms/button/button.js","ui/atoms/input/input.js","ui/atoms/label/label.js","ui/atoms/select/select.js","ui/atoms/textarea/textarea.js","ui/atoms/no-task/no-task.js","ui/molecules/form-field/styles.js","ui/molecules/form-field/form-field.jsx","ui/molecules/task/styles.js","ui/molecules/task/task.jsx","ui/organisms/list/styles.js","ui/organisms/list/list.jsx","ui/organisms/panel/styles.js","features/task-list/actions/actions.js","features/modal/ui/organisms/styles.js","features/modal/ui/organisms/modal-inner.jsx","features/modal/actions/actions.js","features/modal/modal.jsx","features/modal/reducers/reducers.js","features/task-list/task-list.jsx","features/task-list/reducer/initial-state.js","ui/organisms/panel/panel.jsx","features/task-bar/task-bar.jsx","pages/page.jsx","App.js","model/model.js","features/task-list/reducer/reducer.js","index.js"],"names":["Container","styled","div","Button","button","Input","input","Label","label","Select","select","Textarea","textarea","NoTask","FormFieldElement","p","FormField","props","controlType","id","options","text","htmlFor","map","value","key","selectControl","TaskElement","TaskElementTop","TaskElementBottom","TaskElementData","TaskElementName","complete","TaskElementDesc","TaskElementDate","TaskElementControls","Task","title","date","openModal","dispatch","completeTask","cancelTask","removeTask","onClick","aria-label","ListElement","ul","ListElementItem","li","List","list","PanelElement","PanelElementField","PanelElementSearchField","createDate","d","get–°orrectUnit","unit","day","getDate","m","getMonth","y","getFullYear","h","getHours","min","getMinutes","addTaskCreationData","Date","dateForSort","now","addTask","payload","type","editTask","ModalElement","ModalElementInner","ModalElementHeader","ModalElementForm","form","ModalElementFormField","ModalElementTitle","span","ModalInner","closeModal","isEditMode","useState","inputValue","setInputValue","textareaValue","setTextareaValue","onSubmit","onChange","e","target","autoFocus","disabled","Modal","useDispatch","useSelector","modalReducer","isOpen","listReducer","length","find","task","initialState","edittableTaskId","sortString","a","b","localeCompare","TaskList","taskList","searchValue","sortByTypeValue","sortValue","filter","validValues","match","toLowerCase","push","every","val","sort","currentTask","nextTask","sortValues","sortByTypeValues","todoList","localStorage","getItem","JSON","parse","loadFromLocalStorage","Panel","placeholder","Number","TaskBar","MainPage","App","reducers","combineReducers","prevState","action","model","createStore","prevList","subscribe","getState","setItem","stringify","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.bbf68ad2.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 50px 15px;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  background-color: #1e1d1c;\r\n  border-radius: 3px;\r\n  border: none;\r\n  padding: 8px 10px;\r\n  color: white;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 1em;\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  transition: background-color .3s, opacity .5s;\r\n\r\n  &:hover, &:focus {\r\n    background-color: #0e0e0d;\r\n  }\r\n\r\n  &:disabled {\r\n    opacity: .3;\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 30px;\r\n  background-color: #1e1d1c;\r\n  border-radius: 3px;\r\n  border: none;\r\n  padding: 0 8px;\r\n  color: white;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 1em;\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  transition: box-shadow .3s;\r\n\r\n  &:focus {\r\n    box-shadow: 0px 1px 5px 0px #3e3e3e;\r\n  }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-size: 14px;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Select = styled.select`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  min-width: 100px;\r\n  height: 30px;\r\n  background-color: #1e1d1c;\r\n  border-radius: 3px;\r\n  border: none;\r\n  padding: 0 8px;\r\n  color: white;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 1em;\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  transition: box-shadow .3s;\r\n\r\n  &:focus {\r\n    box-shadow: 0px 3px 10px 1px #3e3e3e;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Textarea = styled.textarea`\r\n  width: 100%;\r\n  height: 100px;\r\n  background-color: #1e1d1c;\r\n  border-radius: 3px;\r\n  border: none;\r\n  padding: 8px;\r\n  color: white;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 1em;\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  transition: box-shadow .3s;\r\n\r\n  &:focus {\r\n    box-shadow: 0px 1px 5px 0px #3e3e3e;\r\n  }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const NoTask = styled.div`\r\n  padding: 30px;\r\n  color: #fff;\r\n  font-size: 24px;\r\n  text-align: center;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const FormFieldElement = styled.p`\r\n  margin: 0;\r\n`;","import React from 'react';\r\nimport { FormFieldElement } from './styles';\r\nimport { Input, Select, Label, Button } from '@ui';\r\n\r\nexport const FormField = (props) => {\r\n  const {controlType, label = '', id = '', options = [], text = ''} = props;\r\n  \r\n  const selectControl = (controlType) => {\r\n    switch (controlType) {\r\n      case 'input':\r\n        return <Input {...props}/>\r\n      case 'select':\r\n        return <Select {...props}>\r\n                 {options.map( ({value, label}) => <option value={value} key={value}>{label}</option>)}\r\n               </Select>\r\n      case 'button': \r\n        return <Button {...props}>{text}</Button>\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormFieldElement>\r\n      <Label htmlFor={id}>{ label }</Label>\r\n      { selectControl(controlType) }\r\n    </FormFieldElement>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const TaskElement = styled.div`\r\n  background-color: #2f2f2f;\r\n  border-radius: 3px;\r\n  padding: 10px 10px 10px 20px;\r\n  color: #fff;\r\n`;\r\n\r\nexport const TaskElementTop = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n`\r\n\r\nexport const TaskElementBottom = styled.div`\r\n  border-top: 1px solid #1e1d1c;\r\n  margin: 10px 0 0;\r\n  padding-top: 5px;\r\n`;\r\n\r\nexport const TaskElementData = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const TaskElementName = styled.p`\r\n  margin: 0;\r\n  font-size: 16px;\r\n  text-decoration: ${ props => {\r\n    return props.complete === true ? 'line-through' : 'none'\r\n  }};\r\n\r\n  &::first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport const TaskElementDesc = styled.p`\r\n  margin: 10px 0 0;\r\n  font-size: 13px;\r\n  text-decoration: ${ props => {\r\n    return props.complete === true ? 'line-through' : 'none'\r\n  }};\r\n\r\n  &::first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport const TaskElementDate = styled.p`\r\n  margin: 0;\r\n  color: #949494;\r\n  font-size: 12px;\r\n  text-align: right;\r\n`;\r\n\r\nexport const TaskElementControls =  styled.p`\r\n  display: flex;\r\n  margin: 0;\r\n  font-size: 16px;\r\n\r\n  > * + * {\r\n    margin-left: 10px;\r\n  }\r\n`;","import React from 'react';\r\nimport { Button } from '@ui';\r\nimport {\r\n  TaskElement,\r\n  TaskElementTop,\r\n  TaskElementBottom,\r\n  TaskElementData,\r\n  TaskElementName,\r\n  TaskElementDesc,\r\n  TaskElementDate,\r\n  TaskElementControls\r\n} from './styles';\r\n\r\n\r\nexport const Task = ({ \r\n  id, \r\n  title, \r\n  text, \r\n  date, \r\n  complete, \r\n  openModal, \r\n  dispatch, \r\n  completeTask, \r\n  cancelTask, \r\n  removeTask }) => {\r\n\r\n  return (\r\n    <TaskElement>\r\n      <TaskElementTop>\r\n        <TaskElementData>\r\n          <TaskElementName complete={complete}>{title}</TaskElementName>\r\n          <TaskElementDesc complete={complete}>{text}</TaskElementDesc>\r\n        </TaskElementData>\r\n        <TaskElementControls>\r\n\r\n          {complete ?\r\n            <Button\r\n              onClick={() => dispatch(cancelTask(id))}\r\n              aria-label='Mark as failed'\r\n              title='Mark as outstanding'\r\n            >&#128683;</Button>\r\n            :\r\n            <Button\r\n              onClick={() => dispatch(completeTask(id))}\r\n              aria-label='Mark as done'\r\n              title='Mark as done'\r\n            >‚úî</Button>\r\n          }\r\n\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(openModal(id))\r\n            }}\r\n            aria-label='Edit'\r\n            title='Edit'\r\n          >&#9998;</Button>\r\n\r\n          <Button\r\n            onClick={() => dispatch(removeTask(id))}\r\n            aria-label='Delete'\r\n            title='Delete'\r\n          >‚ùå</Button>\r\n\r\n        </TaskElementControls>\r\n      </TaskElementTop>\r\n      <TaskElementBottom>\r\n        <TaskElementDate>{date}</TaskElementDate>\r\n      </TaskElementBottom>\r\n    </TaskElement>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const ListElement = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n`;\r\n\r\nexport const ListElementItem = styled.li`\r\n  & + & {\r\n    margin-top: 10px;\r\n  }\r\n`;","import React from 'react';\r\nimport { Task } from '@ui';\r\nimport { ListElement, ListElementItem } from './styles';\r\n\r\nexport const List = ({list, ...props}) => (\r\n  <ListElement>\r\n    {list.map( ({id, title, text, date, complete}) => {\r\n      \r\n      return <ListElementItem key={id}>\r\n        <Task \r\n          id={id}  \r\n          title={title} \r\n          text={text} \r\n          date={date}\r\n          complete={complete}\r\n          {...props}\r\n          />\r\n      </ListElementItem>\r\n    })}\r\n  </ListElement>\r\n);\r\n","import styled from 'styled-components';\r\n\r\nexport const PanelElement = styled.div`\r\n  position: sticky;\r\n  top: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #2f2f2f;\r\n  border-radius: 3px;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  box-shadow: 0 -15px 0 25px #1e1d1c;\r\n`;\r\n\r\nexport const PanelElementField = styled.div`\r\n  & + & {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const PanelElementSearchField = styled(PanelElementField)`\r\n  flex-grow: 1;\r\n\r\n  & + ${PanelElementField} {\r\n    margin-left: 10px;\r\n  }\r\n`;","export const SET_SORT_LIST    = 'SET_SORT_LIST';\r\nexport const SET_SORT_BY_TYPE = 'SET_SORT_BY_TYPE';\r\nexport const SET_SUMMARY_LIST = 'SET_SUMMARY_LIST';\r\nexport const ADD_TASK         = 'ADD_TASK';\r\nexport const EDIT_TASK        = 'EDIT_TASK';\r\nexport const COMPLETE_TASK    = 'COMPLETE_TASK';\r\nexport const CANCEL_TASK    = 'CANCEL_TASK';\r\nexport const SET_SEARCH_VALUE = 'SET_SEARCH_VALUE';\r\nexport const REMOVE_TASK      = 'REMOVE_TASK';\r\n\r\nconst createDate = d => {\r\n  const get–°orrectUnit = unit => unit < 10 ? '0'+unit : unit;\r\n  const day = d.getDate();\r\n  const m = d.getMonth();\r\n  const y = d.getFullYear();\r\n  const h = d.getHours();\r\n  const min = d.getMinutes();\r\n\r\n  return `${get–°orrectUnit(day)}/${get–°orrectUnit(m)}/${get–°orrectUnit(y)} ${get–°orrectUnit(h)}:${get–°orrectUnit(min)}`\r\n}\r\n\r\nconst addTaskCreationData = () => {\r\n  const date = new Date();\r\n  const dateForSort = Date.now();\r\n  return {\r\n    dateForSort,\r\n    date: createDate(date),\r\n    id: dateForSort,\r\n    complete: false\r\n  }\r\n};\r\n\r\nexport const setSortValue = payload => ({\r\n  type: SET_SORT_LIST,\r\n  payload\r\n});\r\n\r\nexport const setSortByTypeValue = payload => ({\r\n  type: SET_SORT_BY_TYPE,\r\n  payload\r\n});\r\n\r\nexport const setSummaryList = () => ({\r\n  type: SET_SUMMARY_LIST\r\n});\r\n\r\nexport const addTask = payload => ({\r\n  type: ADD_TASK,\r\n  payload: {...payload, ...addTaskCreationData()}\r\n});\r\n\r\nexport const editTask = payload => ({\r\n  type: EDIT_TASK,\r\n  payload\r\n});\r\n\r\nexport const completeTask = payload => ({\r\n  type: COMPLETE_TASK,\r\n  payload\r\n});\r\n\r\nexport const cancelTask = payload => ({\r\n  type: CANCEL_TASK,\r\n  payload\r\n});\r\n\r\nexport const setSearchValue = payload => ({\r\n  type: SET_SEARCH_VALUE,\r\n  payload\r\n});\r\n\r\nexport const removeTask = payload => ({\r\n  type: REMOVE_TASK,\r\n  payload\r\n});","import styled from 'styled-components';\r\nimport { Button } from '@ui';\r\n\r\nexport const ModalElement = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0,0,0,.95);\r\n  padding: 10px;\r\n`;\r\n\r\nexport const ModalElementInner = styled.div`\r\n  width: 340px;\r\n  background-color: #2f2f2f;\r\n  border-radius: 3px;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const ModalElementHeader = styled.p`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #1e1d1c;\r\n  margin: 0 0 15px;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nexport const ModalElementForm = styled.form`\r\n\r\n`\r\n\r\nexport const ModalElementFormField = styled.p`\r\n  display: flex;\r\n  margin: 0 0 15px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  ${Button} {\r\n    margin-left: auto;\r\n  }\r\n`;\r\n\r\nexport const ModalElementTitle = styled.span`\r\n  font-size: 20px;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { Button, Input, Textarea } from '@ui';\r\nimport {\r\n  ModalElement,\r\n  ModalElementInner,\r\n  ModalElementHeader,\r\n  ModalElementTitle,\r\n  ModalElementForm,\r\n  ModalElementFormField,\r\n} from './styles';\r\n\r\nexport const ModalInner = ({\r\n  dispatch, \r\n  addTask,\r\n  editTask,\r\n  closeModal,\r\n  isEditMode,\r\n  id,\r\n  title, \r\n  text\r\n}) => {\r\n\r\n  const [inputValue, setInputValue] = useState( isEditMode ? title : '' );\r\n  const [textareaValue, setTextareaValue] = useState( isEditMode ? text : '' );\r\n\r\n  return (\r\n    <ModalElement>\r\n      <ModalElementInner>\r\n        <ModalElementHeader>\r\n          <ModalElementTitle>{isEditMode ? 'Edit' : 'New'} task</ModalElementTitle>\r\n          <Button onClick={ () => {\r\n            dispatch(closeModal())\r\n            setInputValue('')\r\n          }}>&#10060;</Button>\r\n        </ModalElementHeader>\r\n        <ModalElementForm onSubmit={() => {\r\n          if ( isEditMode ) {\r\n            dispatch(editTask({id, title: inputValue, text: textareaValue}));\r\n          }\r\n          else {\r\n            dispatch(addTask({title: inputValue, text: textareaValue}));\r\n          }\r\n          dispatch(closeModal());\r\n        }}>\r\n          <ModalElementFormField>\r\n            <Input value={inputValue} onChange={ e => setInputValue(e.target.value) } autoFocus={true}/>\r\n          </ModalElementFormField>\r\n          <ModalElementFormField>\r\n            <Textarea value={textareaValue} onChange={ e => setTextareaValue(e.target.value) }/>\r\n          </ModalElementFormField>\r\n          <ModalElementFormField>\r\n          <Button disabled={ inputValue ? false : true }>&#9989; { isEditMode ? 'Save' : 'Add'}</Button>\r\n        </ModalElementFormField>\r\n        </ModalElementForm>\r\n      </ModalElementInner>\r\n    </ModalElement>\r\n  )\r\n}","export const OPEN_MODAL = 'OPEN_MODAL';\r\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\r\n\r\nexport const openModal = (payload) => ({\r\n  type: OPEN_MODAL,\r\n  payload\r\n});\r\n\r\nexport const closeModal = () => ({\r\n  type: CLOSE_MODAL\r\n});","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ModalInner } from './ui';\r\nimport { closeModal } from './actions/actions';\r\nimport { addTask, editTask } from '@features/task-list';\r\n\r\nexport const Modal = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const { isOpen, isEditMode, id } = useSelector( ({modalReducer}) => modalReducer );\r\n  const { title, text } = useSelector( ({ listReducer: { list } }) => {\r\n    if ( list.length > 0 && isEditMode ) {\r\n      return list.find( task => task.id === id )\r\n    }\r\n    else {\r\n      return {}\r\n    }\r\n  });\r\n\r\n  if ( !isOpen ) return null;\r\n\r\n  return <ModalInner \r\n      dispatch={dispatch} \r\n      addTask={addTask}\r\n      editTask={editTask}\r\n      closeModal={closeModal}\r\n      isEditMode={isEditMode}\r\n      id={id}\r\n      title={title} \r\n      text={text}\r\n    />;\r\n}\r\n","import { OPEN_MODAL, CLOSE_MODAL } from '../actions/actions';\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n  edittableTaskId: null\r\n}\r\n\r\nexport const modalReducer = (prevState = initialState, action) => {\r\n  switch (action.type) {\r\n    \r\n    case OPEN_MODAL:\r\n      return {\r\n        isOpen: true,\r\n        isEditMode: action.payload ? true : false,\r\n        id: action.payload ? action.payload : null\r\n      };\r\n\r\n    case CLOSE_MODAL:\r\n      return {\r\n        isOpen: false,\r\n        isEditMode: false,\r\n        id: null\r\n      };\r\n  \r\n    default:\r\n      return prevState;\r\n  }\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { NoTask, List } from '@ui';\r\nimport { completeTask, cancelTask, removeTask, editTask } from './actions/actions';\r\nimport { openModal } from '@features/modal'\r\n\r\nconst sortString = (a,b) => a.localeCompare(b);\r\n\r\nexport const TaskList = () => {\r\n  const dispatch = useDispatch();\r\n  const taskList = useSelector( ({listReducer: { list, searchValue, sortByTypeValue, sortValue }}) => (\r\n    list\r\n      .filter( ({ title, complete }) => {\r\n        const validValues = [];\r\n        \r\n        if (searchValue) {\r\n          const match = title.toLowerCase().match(searchValue);\r\n          validValues.push(match ? true : false);\r\n        }\r\n        else {\r\n          validValues.push(true);\r\n        }\r\n        \r\n        switch (sortByTypeValue) {\r\n          case 1:\r\n            validValues.push( complete === false);\r\n            break;\r\n\r\n          case 2:\r\n            validValues.push( complete === true);\r\n            break;\r\n        \r\n          default:\r\n            validValues.push(true);\r\n            break;\r\n        }\r\n\r\n        return validValues.every(val => val)\r\n\r\n      })\r\n      .sort( (currentTask, nextTask) => {\r\n        switch (sortValue) {\r\n          case 0:\r\n            return nextTask.dateForSort - currentTask.dateForSort;\r\n          case 1:\r\n            return currentTask.dateForSort - nextTask.dateForSort;\r\n          case 2:\r\n            return sortString(currentTask.title, nextTask.title);\r\n          case 3:\r\n            return sortString(nextTask.title, currentTask.title);\r\n          default:\r\n            break;\r\n        }\r\n\r\n        return true\r\n      })\r\n  ));\r\n  \r\n  if ( taskList.length < 1 ) return (\r\n    <NoTask>You have no scheduled tasks. Add?</NoTask>\r\n  );\r\n\r\n  return (\r\n    <List \r\n      list={taskList} \r\n      dispatch={dispatch} \r\n      completeTask={completeTask}\r\n      cancelTask={cancelTask} \r\n      openModal={openModal}\r\n      editTask={editTask} \r\n      removeTask={removeTask}/>\r\n  )\r\n}\r\n","const loadFromLocalStorage = () => {\r\n  const todoList = localStorage.getItem('todoList');\r\n  if ( todoList ) return JSON.parse(todoList);\r\n  return []\r\n}\r\n\r\nexport const initialState = {\r\n  sortValues: [\r\n    {\r\n      label: 'New',\r\n      value: 0\r\n    },\r\n    {\r\n      label: 'Old',\r\n      value: 1\r\n    },\r\n    {\r\n      label: 'A-Z',\r\n      value: 2\r\n    },\r\n    {\r\n      label: 'Z-A',\r\n      value: 3\r\n    },\r\n  ],\r\n\r\n  sortValue: 0,\r\n\r\n  sortByTypeValues: [\r\n    {\r\n      label: 'All',\r\n      value: 0\r\n    },\r\n    {\r\n      label: 'Active',\r\n      value: 1\r\n    },\r\n    {\r\n      label: 'Completed',\r\n      value: 2\r\n    }\r\n  ],\r\n\r\n  sortByTypeValue: 0,\r\n\r\n  searchValue: '',\r\n\r\n  list: loadFromLocalStorage()\r\n}","import React from 'react';\r\nimport { PanelElement, PanelElementField, PanelElementSearchField } from './styles';\r\nimport { FormField } from '@ui';\r\nimport { setSearchValue, setSortValue, setSortByTypeValue } from '@features/task-list';\r\nimport { openModal } from '@features/modal';\r\n\r\nexport const Panel = ({ searchValue, sortValue, sortValues, sortByTypeValue, sortByTypeValues, dispatch }) => {\r\n  return (\r\n    <PanelElement>\r\n\r\n      <PanelElementSearchField>\r\n        <FormField \r\n          controlType='input'\r\n          type='search'\r\n          id='search'\r\n          label='Search'\r\n          placeholder='Search'\r\n          value={searchValue}\r\n          onChange={ e => dispatch(setSearchValue(e.target.value)) }\r\n        />\r\n      </PanelElementSearchField>\r\n\r\n      <PanelElementField>\r\n        <FormField \r\n          controlType='select'\r\n          id='sort'\r\n          label='Sort'\r\n          value={sortValue}\r\n          options={sortValues}\r\n          onChange={ e => dispatch(setSortValue( Number(e.target.value) )) }\r\n        />\r\n      </PanelElementField>\r\n\r\n      <PanelElementField>\r\n        <FormField \r\n          controlType='select'\r\n          id='sortbytype'\r\n          label='Sort by type'\r\n          value={sortByTypeValue}\r\n          options={sortByTypeValues}\r\n          onChange={ e => dispatch(setSortByTypeValue( Number(e.target.value) )) }/>\r\n      </PanelElementField>\r\n\r\n      <PanelElementField>\r\n        <FormField \r\n          controlType='button'\r\n          id='addtask'\r\n          label='Add'\r\n          aria-label='add new task'\r\n          text='&#x1F4C4;'\r\n          onClick={ () => dispatch(openModal()) }/>\r\n      </PanelElementField>\r\n      \r\n    </PanelElement>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Panel } from '@ui';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nexport const TaskBar = () => {\r\n  const {\r\n    sortValues, \r\n    sortValue, \r\n    sortByTypeValues, \r\n    sortByTypeValue, \r\n    searchValue\r\n  } = useSelector( ({listReducer}) => listReducer );\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  return (\r\n    <Panel\r\n      searchValue={searchValue}\r\n      sortValues={sortValues}\r\n      sortValue={sortValue}\r\n      sortByTypeValues={sortByTypeValues}\r\n      sortByTypeValue={sortByTypeValue}\r\n      dispatch={dispatch}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Container } from './styles';\r\nimport { TaskBar } from '@features/task-bar';\r\nimport { TaskList } from '@features/task-list';\r\nimport { Modal } from '@features/modal';\r\n\r\nexport const MainPage = (props) => {\r\n  return (\r\n    <Container>\r\n      <TaskBar/>\r\n      <TaskList/>\r\n      <Modal/>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { MainPage } from './pages';\r\n\r\nfunction App() {\r\n  return (\r\n    <MainPage/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { listReducer } from '@features/task-list';\r\nimport { modalReducer } from '@features/modal';\r\n\r\nconst reducers = combineReducers({listReducer, modalReducer})\r\n\r\nexport const model = createStore(reducers);\r\n\r\nlet prevList = [];\r\n\r\nconst saveToLocalStorage = () => {\r\n  const list = model.getState().listReducer.list;\r\n  \r\n  if ( prevList !== list ) {\r\n    prevList = list\r\n    localStorage.setItem('todoList', JSON.stringify(list));\r\n  }\r\n  \r\n}\r\n\r\nmodel.subscribe(saveToLocalStorage);","import { initialState } from './initial-state';\r\nimport { \r\n  SET_SORT_LIST,\r\n  SET_SORT_BY_TYPE,\r\n  SET_SEARCH_VALUE,\r\n  ADD_TASK,\r\n  EDIT_TASK,\r\n  COMPLETE_TASK,\r\n  CANCEL_TASK,\r\n  REMOVE_TASK\r\n} from '../actions/actions';\r\n\r\nexport const listReducer = (prevState = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case SET_SORT_LIST:\r\n      return {\r\n        ...prevState,\r\n        sortValue: action.payload\r\n      };\r\n\r\n    case SET_SORT_BY_TYPE:\r\n      return {\r\n        ...prevState,\r\n        sortByTypeValue: action.payload\r\n      };\r\n\r\n    case SET_SEARCH_VALUE:\r\n      return {\r\n        ...prevState,\r\n        searchValue: action.payload\r\n      };\r\n\r\n    case ADD_TASK:\r\n      return {\r\n        ...prevState,\r\n        list: [...prevState.list, action.payload]\r\n      };\r\n\r\n    case EDIT_TASK:\r\n      return {\r\n        ...prevState,\r\n        list: prevState.list.map( task => {\r\n          if ( task.id === action.payload.id ) return {...task, ...action.payload};\r\n          return task\r\n        })\r\n      };\r\n\r\n    case COMPLETE_TASK:\r\n      return {\r\n        ...prevState,\r\n        list: prevState.list.map( task => {\r\n          if (task.id === action.payload) task.complete = true;\r\n          return task\r\n        })\r\n      };\r\n\r\n    case CANCEL_TASK:\r\n      return {\r\n        ...prevState,\r\n        list: prevState.list.map( task => {\r\n          if (task.id === action.payload) task.complete = false;\r\n          return task\r\n        })\r\n      };\r\n\r\n    case REMOVE_TASK:\r\n      return {\r\n        ...prevState,\r\n        list: prevState.list.filter( ({ id }) => id !== action.payload )\r\n      };\r\n  \r\n    default:\r\n      return prevState;\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { model } from './model';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={model}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}